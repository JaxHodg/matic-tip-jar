{"version":3,"sources":["components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["CreateJar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","event","jarId","hexId","validId","usedId","wrap","_context","prev","next","target","value","setState","Web3","utils","padRight","utf8ToHex","tipjar","methods","isValidId","sent","isJar","stop","_x","apply","arguments","handleSubmit","_callee2","_context2","state","createTipJar","send","from","account","window","location","href","react_default","createElement","InputGroup","className","Text","FormControl","type","placeholder","isInvalid","onChange","Feedback","Button","variant","onClick","Component","DonationField","_this2","_ref3","_callee3","donationAmount","gasEstimate","gasPrice","totalGasEstimate","_context3","toWei","toBN","t0","validDonationAmount","abrupt","donate","pathHex","estimateGas","amount","web3","eth","getGasPrice","mul","total","add","_x2","_callee4","_context4","reload","path","fromWei","readOnly","EditJar","_this3","handleWithdrawAddressChange","_ref5","_callee5","withdrawAddress","_context5","validWithdrawAddress","isAddress","_x3","handleWithdrawAmountChange","_ref6","_callee6","withdrawAmount","_context6","validWithdrawAmount","lte","balance","gt","console","log","_x4","handleWithdrawSubmit","_callee7","_context7","withdraw","handleTransferAddressChange","_ref8","_callee8","transferAddress","_context8","validTransferAddress","_x5","handleTransferSubmit","_callee9","_context9","transferTipJar","_this4","disabled","isZero","_callee10","_context10","deleteTipJar","Main","Container","Main_DonationField","isOwner","Main_EditJar","Main_CreateJar","App","pathname","replace","loading","loadThings","initWeb3","getData","ethereum","request","method","alert","getAccounts","accounts","net","getId","networkId","networkData","TipJar","networks","Contract","abi","address","params","chainId","code","chainName","rpcUrl","nativeCurrency","name","symbol","decimals","jar","owner","Spinner","animation","role","components_Main","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6504152.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass CreateJar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      validId: true,\r\n    };\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    const jarId = event.target.value;\r\n    this.setState({ jarId });\r\n\r\n    const hexId = Web3.utils.padRight(Web3.utils.utf8ToHex(jarId), 34);\r\n\r\n    const validId = await this.props.tipjar.methods.isValidId(hexId).call();\r\n    const usedId = await this.props.tipjar.methods.isJar(hexId).call();\r\n    this.setState({ validId: validId && !usedId });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const hexId = Web3.utils.padRight(\r\n      Web3.utils.utf8ToHex(this.state.jarId),\r\n      34\r\n    );\r\n\r\n    await this.props.tipjar.methods\r\n      .createTipJar(hexId)\r\n      .send({ from: this.props.account, value: 0 });\r\n\r\n    window.location.href = \"/matic-tip-jar/\" + this.state.jarId;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>{this.props.account}</h2>\r\n\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text>Jar Id</InputGroup.Text>\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Enter a Jar Id\"\r\n            isInvalid={!this.state.validId}\r\n            onChange={this.handleChange}\r\n          />\r\n          <FormControl.Feedback type=\"invalid\">\r\n            Please choose an unused id that is at least 3 characters and only\r\n            contains letters and numbers\r\n          </FormControl.Feedback>\r\n        </InputGroup>\r\n\r\n        <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n          Create\r\n        </Button>\r\n        {}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DonationField extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      donationAmount: Web3.utils.toBN(0),\r\n      validDonationAmount: true,\r\n\r\n      totalGasEstimate: Web3.utils.toBN(0),\r\n      total: Web3.utils.toBN(0),\r\n    };\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    let donationAmount = null;\r\n    try {\r\n      donationAmount = Web3.utils.toWei(event.target.value);\r\n      donationAmount = Web3.utils.toBN(donationAmount);\r\n    } catch (err) {\r\n      this.setState({ validDonationAmount: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ validDonationAmount: true });\r\n\r\n    this.setState({ donationAmount });\r\n\r\n    let gasEstimate = await this.props.tipjar.methods // Total gas used for transaction\r\n      .donate(this.props.pathHex)\r\n      .estimateGas({\r\n        from: this.state.account,\r\n        amount: this.state.donationAmount,\r\n      });\r\n    gasEstimate = Web3.utils.toBN(gasEstimate);\r\n\r\n    let gasPrice = await this.props.web3.eth.getGasPrice(); // Current gas price in Wei\r\n    gasPrice = Web3.utils.toBN(gasPrice);\r\n\r\n    const totalGasEstimate = gasEstimate.mul(gasPrice);\r\n\r\n    this.setState({ totalGasEstimate });\r\n\r\n    this.setState({ total: donationAmount.add(totalGasEstimate) });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    await this.props.tipjar.methods.donate(this.props.pathHex).send({\r\n      from: this.props.account,\r\n      value: this.state.donationAmount,\r\n    });\r\n\r\n    window.location.reload(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.props.path}</h1>\r\n\r\n        <h4>{this.props.account}</h4>\r\n\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text>Donation</InputGroup.Text>\r\n          <FormControl\r\n            type=\"number\"\r\n            placeholder=\"Amount to donate\"\r\n            isInvalid={!this.state.validDonationAmount}\r\n            onChange={this.handleChange}\r\n          />\r\n          <InputGroup.Text>MATIC</InputGroup.Text>\r\n        </InputGroup>\r\n\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text>Estimated Gas</InputGroup.Text>\r\n          <FormControl\r\n            value={Web3.utils.fromWei(this.state.totalGasEstimate)}\r\n            readOnly\r\n          />\r\n          <InputGroup.Text>MATIC</InputGroup.Text>\r\n        </InputGroup>\r\n\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text>Total</InputGroup.Text>\r\n          <FormControl value={Web3.utils.fromWei(this.state.total)} readOnly />\r\n          <InputGroup.Text>MATIC</InputGroup.Text>\r\n        </InputGroup>\r\n\r\n        <Button variant=\"primary\" onClick={this.handleSubmit}>\r\n          Donate\r\n        </Button>\r\n        {}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditJar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      withdrawAddress: \"\",\r\n      withdrawAmount: Web3.utils.toBN(0),\r\n\r\n      validWithdrawAddress: true,\r\n      validWithdrawAmount: true,\r\n\r\n      transferAddress: \"\",\r\n\r\n      validTransferAddress: true,\r\n    };\r\n  }\r\n\r\n  handleWithdrawAddressChange = async (event) => {\r\n    const withdrawAddress = event.target.value;\r\n\r\n    this.setState({ withdrawAddress });\r\n    this.setState({\r\n      validWithdrawAddress: Web3.utils.isAddress(withdrawAddress),\r\n    });\r\n  };\r\n\r\n  handleWithdrawAmountChange = async (event) => {\r\n    let withdrawAmount = null;\r\n    try {\r\n      withdrawAmount = Web3.utils.toWei(event.target.value);\r\n      withdrawAmount = Web3.utils.toBN(withdrawAmount);\r\n      this.setState({\r\n        validWithdrawAmount:\r\n          withdrawAmount.lte(this.props.balance) && withdrawAmount.gt(0),\r\n      });\r\n    } catch (err) {\r\n      this.setState({ validWithdrawAmount: false });\r\n      return;\r\n    }\r\n\r\n    this.setState({ withdrawAmount });\r\n\r\n    console.log(withdrawAmount.lte(this.props.balance) && withdrawAmount.gt(0));\r\n  };\r\n\r\n  handleWithdrawSubmit = async () => {\r\n    await this.props.tipjar.methods\r\n      .withdraw(\r\n        this.props.pathHex,\r\n        this.state.withdrawAddress,\r\n        this.state.withdrawAmount\r\n      )\r\n      .send({ from: this.props.account, value: 0 });\r\n\r\n    window.location.reload(false);\r\n  };\r\n\r\n  handleTransferAddressChange = async (event) => {\r\n    const transferAddress = event.target.value;\r\n\r\n    this.setState({ transferAddress });\r\n    this.setState({\r\n      validTransferAddress: Web3.utils.isAddress(transferAddress),\r\n    });\r\n  };\r\n\r\n  handleTransferSubmit = async () => {\r\n    await this.props.tipjar.methods\r\n      .transferTipJar(this.props.pathHex, this.state.transferAddress)\r\n      .send({ from: this.props.account, value: 0 });\r\n    window.location.reload(false);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <p>Current Balance: {Web3.utils.fromWei(this.props.balance)}</p>\r\n\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text>Withdrawal Address</InputGroup.Text>\r\n\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            isInvalid={!this.state.validWithdrawAddress}\r\n            onChange={this.handleWithdrawAddressChange}\r\n          />\r\n\r\n          <InputGroup.Text>Amount</InputGroup.Text>\r\n\r\n          <FormControl\r\n            type=\"number\"\r\n            placeholder=\"Amount\"\r\n            isInvalid={!this.state.validWithdrawAmount}\r\n            onChange={this.handleWithdrawAmountChange}\r\n          />\r\n\r\n          <Button\r\n            onClick={this.handleWithdrawSubmit}\r\n            disabled={\r\n              !this.state.validWithdrawAddress ||\r\n              this.state.withdrawAddress === \"\" ||\r\n              !this.state.validWithdrawAmount ||\r\n              this.state.withdrawAmount.isZero()\r\n            }\r\n          >\r\n            Withdraw\r\n          </Button>\r\n        </InputGroup>\r\n\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Text>New Owner</InputGroup.Text>\r\n\r\n          <FormControl\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            isInvalid={!this.state.validTransferAddress}\r\n            onChange={this.handleTransferAddressChange}\r\n          />\r\n\r\n          <Button\r\n            onClick={this.handleTransferSubmit}\r\n            disabled={\r\n              !this.state.validTransferAddress ||\r\n              this.state.transferAddress === \"\"\r\n            }\r\n          >\r\n            Transfer Jar\r\n          </Button>\r\n        </InputGroup>\r\n\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={async () => {\r\n            await this.props.tipjar.methods\r\n              .deleteTipJar(this.props.pathHex)\r\n              .send({ from: this.props.account, value: 0 });\r\n\r\n            window.location.href = \"/matic-tip-jar/\";\r\n          }}\r\n          disabled={this.props.balance > 0}\r\n        >\r\n          Delete Tip Jar\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return this.props.isJar ? (\r\n      <Container>\r\n        <DonationField {...this.props} />\r\n        {this.props.isOwner ? <EditJar {...this.props} /> : null}\r\n      </Container>\r\n    ) : (\r\n      <Container>\r\n        {this.props.path === \"\" ? (\r\n          <CreateJar {...this.props} />\r\n        ) : (\r\n          (window.location.href = \"/matic-tip-jar/\")\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport TipJar from \"../abis/TipJar.json\";\r\nimport Web3 from \"web3\";\r\nimport \"./App.css\";\r\nimport Main from \"./Main\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const path = window.location.pathname.replace(\"/matic-tip-jar/\", \"\");\r\n\r\n    const pathHex = Web3.utils.padRight(Web3.utils.utf8ToHex(path), 34);\r\n\r\n    this.state = {\r\n      loading: true,\r\n      path,\r\n      pathHex,\r\n    };\r\n\r\n    this.loadThings();\r\n  }\r\n\r\n  async loadThings() {\r\n    await this.initWeb3();\r\n    await this.getData();\r\n\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  async initWeb3() {\r\n    //Ensures user has an Ethereum wallet on their website\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n    } else {\r\n      window.alert(\"No wallet detected\");\r\n    }\r\n\r\n    const web3 = window.web3;\r\n    this.setState({ web3 });\r\n\r\n    // Adds the user's address to the state\r\n    const accounts = await web3.eth.getAccounts();\r\n    this.setState({ account: accounts[0] });\r\n\r\n    // Ensures the contract was published to the current network\r\n    const networkId = await web3.eth.net.getId();\r\n    const networkData = TipJar.networks[networkId];\r\n    if (networkData) {\r\n      const tipjar = new web3.eth.Contract(TipJar.abi, networkData.address);\r\n      this.setState({ tipjar });\r\n    } else {\r\n      // If contract is not on current network, then request switch to Polygon\r\n      try {\r\n        await window.ethereum.request({\r\n          method: \"wallet_switchEthereumChain\",\r\n          params: [{ chainId: \"0x89\" }],\r\n        });\r\n        window.reload(false);\r\n      } catch (switchError) {\r\n        // This error code indicates that the chain has not been added to MetaMask.\r\n        if (switchError.code === 4902) {\r\n          try {\r\n            await window.ethereum.request({\r\n              method: \"wallet_addEthereumChain\",\r\n              params: [\r\n                {\r\n                  chainId: \"0x89\",\r\n                  chainName: \"Polygon Mainnet\",\r\n                  rpcUrl: \"https://polygon-rpc.com/\",\r\n                  nativeCurrency: {\r\n                    name: \"Matic\",\r\n                    symbol: \"MATIC\",\r\n                    decimals: 18,\r\n                  },\r\n                },\r\n              ],\r\n            });\r\n          } catch (addError) {\r\n            // handle \"add\" error\r\n          }\r\n        }\r\n        // handle other \"switch\" errors\r\n      }\r\n    }\r\n  }\r\n\r\n  async getData() {\r\n    const isJar = await this.state.tipjar.methods\r\n      .isJar(this.state.pathHex)\r\n      .call();\r\n    this.setState({ isJar });\r\n\r\n    const jar = await this.state.tipjar.methods.jar(this.state.pathHex).call();\r\n    const isOwner = this.state.account === jar.owner;\r\n\r\n    this.setState({ isOwner });\r\n    this.setState({ balance: Web3.utils.toBN(jar.balance) });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loading ? (\r\n          <div className=\"text-center mt-5\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"visually-hidden\"></span>\r\n            </Spinner>\r\n            <p>Waiting for Ethereum</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center mt-5\">\r\n            <Main {...this.state} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}